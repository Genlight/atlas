(match
  leaf
  (ite
    (w{mono} node)
    (ite
      (match
        (let:tree:cf
          (w{mono} leaf)
          (let:tree:cf (w{mono} leaf) (w{size} (let:tree:cf (w{mono} node) (w{mono} node))))
        )
        (ite
          (w{size} (let:tree:cf (w{mono} node) (w{mono} node)))
          (ite
            (match
              (let:tree:cf (w{mono} leaf) (let:tree:cf (w{mono} leaf) (w{size} (let:tree:cf (w{mono} node) (w{size} (let:tree:cf (w{mono} node) (w{mono} node)))))))
              (w{l2xy mono}
                (let:tree:cf
                  (tick app)
                  (match
                    (w{mono} (w:var (w:var leaf)))
                    (ite
                      (tick (let:tree:cf node (let:tree:cf node (w{mono} node))))
                      (let:tree:cf node (let:tree:cf node (w node)))
                    )
                  )
                )
              )
            )
            (match
              (let:tree:cf leaf (let:tree:cf leaf (w{size} (let:tree:cf node (w{size} (let:tree:cf node (w{mono} node)))))))
              (w{l2xy mono}
                (let:tree:cf
                  (tick app)
                  (match
                    (w{mono} leaf)
                    (ite
                      (w{l2xy} (tick (let:tree:cf node (let:tree:cf node (w{mono} node)))))
                      (let:tree:cf node (let:tree:cf node (w node)))
                    )
                  )
                )
              )
            )
          )
        )
      )
      (match
        (let:tree:cf leaf (let:tree:cf leaf (w{size} (let:tree:cf node (w{mono} node)))))
        (ite
          (let:tree:cf (w{mono} node) (w{mono} node))
          (ite
            (match
              (let:tree:cf leaf (let:tree:cf leaf (w{size} (let:tree:cf node (w{size} (let:tree:cf node (w{mono} node)))))))
              (w{l2xy mono}
                (let:tree:cf
                  (tick app)
                  (match
                    (w{mono} (w:var (w:var leaf)))
                    (ite
                      (w{l2xy} (tick (let:tree:cf node (let:tree:cf node (w{mono} node)))))
                      (let:tree:cf node (let:tree:cf node (w{mono} node)))
                    )
                  )
                )
              )
            )
            (match
              (w{size} (let:tree:cf node (let:tree:cf leaf (let:tree:cf leaf (w{size} (let:tree:cf (w{mono} node) (w{mono} node)))))))
              (w{l2xy mono}
                (let:tree:cf
                  (tick app)
                  (match
                    (w{mono} leaf)
                    (ite
                      (tick (let:tree:cf node (let:tree:cf node (w{mono} node))))
                      (let:tree:cf node (let:tree:cf node (w node)))
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)