(match (* t *)
  (w leaf)
  (Q1@!{[0 ↦ 1, 1 ↦ 1, (1 1 0) ↦ 3, (1 0 0) ↦ 1, (0 1 0) ↦ 1, (0 0 2) ↦ 1] -> [0 ↦ 1, (0 2) ↦ 1]}
  (ite (* a == c *)
    (w node)
    (ite (* a < c *)
      (match (* cl, zig *)
        (let:tree:cf leaf (w node))
        (Q2@!{[0 ↦ 1, 1 ↦ 1, 2 ↦ 1, (0 0 1 0) ↦ 1, (0 1 0 0) ↦ 1, (1 0 0 0) ↦ 1, (1 1 0 0) ↦ 1, (1 1 1 0) ↦ 3, (0 0 0 2) ↦ 1] -> [0 ↦ 1, (0 2) ↦ 1]}
          (ite (* a == b *)
            (let:tree:cf node (w{mono} node))
            (ite (* a < b *)
              (ite (* bl == leaf, zig zig *)
                (let:tree:cf node (w{mono} node))
                (w{l2xy}
                  (Q3@!{[0 ↦ 1, 1 ↦ 1, 2 ↦ 1, (0 1 0 0) ↦ 1 , (1 0 0 0) ↦ 3, (0 0 1 0) ↦ 1 , (0 1 1 0) ↦ 1 , (1 1 1 0) ↦ 1, (0 0 0 2) ↦ 2] -> [0 ↦ 1, (0 2) ↦ 1]}
                  (let:tree:cf
                    app (* splay_eq a bl *)
                    (Q4@!{[0 ↦ 1, 1 ↦ 1, 2 ↦ 1, (1 0 0 0) ↦ 1, (0 1 0 0) ↦ 1, (1 1 0 0) ↦ 1, (1 1 1 0) ↦ 1, (0 0 0 2) ↦ 1] -> [0 ↦ 1, (0 2) ↦ 1]}
                      (match
                        (w leaf)
                        (let:tree:cf node (let:tree:cf node (w{mono} node)))
                      )
                    )
                  )
                  )
                )
              )
              (ite (* br == leaf, zig zag *)
                (let:tree:cf node (w{mono} node))
                (Q3azigzag@!{[0 ↦ 1, 1 ↦ 1, 2 ↦ 1, (0 1 0 0) ↦ 1, (1 0 0 0) ↦ 1, (1 1 0 0) ↦ 1, (0 0 1 0) ↦ 1, (1 1 1 0) ↦ 3, (0 0 0 2) ↦ 1] -> [0 ↦ 1, (0 2) ↦ 1]}
                  (w{l2xy}
                    (Q3bzigzag@!{[0 ↦ 1, 1 ↦ 1, 2 ↦ 1, (0 1 0 0) ↦ 3, (1 0 0 0) ↦ 1, (0 0 1 0) ↦ 1, (1 1 1 0) ↦ 2, (0 0 0 2) ↦ 1] -> [0 ↦ 1, (0 2) ↦ 1]}
                      (let:tree:cf
                        app (* splay_eq a br *)
                        (Q4zigzag@!{[0 ↦ 1, 1 ↦ 1, 2 ↦ 1, (0 1 0 0) ↦ 1, (1 0 0 0) ↦ 1, (1 1 1 0) ↦ 2] -> [0 ↦ 1, (0 2) ↦ 1]}
                            (match
                              (w{mono} leaf)
                              (Q5zigzag@!{[0 ↦ 1, 1 ↦ 1, 2 ↦ 1, 3 ↦ 1, (1 0 0 0 0) ↦ 1, (0 1 0 0 0) ↦ 1, (0 0 1 0 0) ↦ 1, (0 0 0 1 0) ↦ 1, (1 1 1 1 0) ↦ 2] -> [0 ↦ 1, (0 2) ↦ 1]}
                                (w{l2xy} (let:tree:cf
                                  node
                                  (let:tree:cf
                                    node
                                    Q6zigzag@node
                                  )
                                ))
                              )
                            )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (match (* cr, zag *)
        (let:tree:cf leaf (w{mono} node))
        (Q2zag@w{l2xy}
          (Q3zag@ite (* a == b *)
            (let:tree:cf node (w{mono} node))
            (ite (* a < b *)
              (ite (* bl == leaf, zag zig *)
                (let:tree:cf node (w{mono} node))
                (w{l2xy}
                  (let:tree:cf
                    app (* splay_eq a bl *)
                    (Q4zagzig@match
                      (w{mono} leaf)
                      (Q5zagzig@w{l2xy} (let:tree:cf
                        node
                        (let:tree:cf
                          node
                          node
                        )
                      ))
                    )
                  )
                )
              )
              (ite (* br == leaf, zag zag *)
                (let:tree:cf node (w{mono} node))
                (w{l2xy}
                  (let:tree:cf
                    app (* splay_eq a br *)
                    (Q4zagzag@match
                      (w leaf)
                      (Q5zagzag@let:tree:cf
                        node
                        (let:tree:cf
                          node
                          (w{mono} node)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
  )
)
